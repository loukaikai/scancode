/*    */ package BOOT-INF.classes.com.amarsoft.rwa.engine.entity;
/*    */ public class DiIntermediateDto { private String intResultNo; private String intResultType; private String nettingId; private String clientId;
/*    */   private String marginTradingFlag;
/*    */   private String derivativeAssetType;
/*    */   private String offsetComb;
/*    */   private String commoditySubtype;
/*    */   private BigDecimal supervisionFactor;
/*    */   private BigDecimal supervisionCoefficient;
/*    */   private BigDecimal nmtD1EffectiveNotional;
/*    */   private BigDecimal nmtD2EffectiveNotional;
/*    */   
/* 12 */   public void setIntResultNo(String intResultNo) { this.intResultNo = intResultNo; } private BigDecimal nmtD3EffectiveNotional; private BigDecimal mtD1EffectiveNotional; private BigDecimal mtD2EffectiveNotional; private BigDecimal mtD3EffectiveNotional; private BigDecimal nmtEffectiveNotional; private BigDecimal mtEffectiveNotional; private BigDecimal nmtAddOn; private BigDecimal mtAddOn; private BigDecimal nmtAddOnP1; private BigDecimal nmtAddOnP2; private BigDecimal mtAddOnP1; private BigDecimal mtAddOnP2; public void setIntResultType(String intResultType) { this.intResultType = intResultType; } public void setNettingId(String nettingId) { this.nettingId = nettingId; } public void setClientId(String clientId) { this.clientId = clientId; } public void setMarginTradingFlag(String marginTradingFlag) { this.marginTradingFlag = marginTradingFlag; } public void setDerivativeAssetType(String derivativeAssetType) { this.derivativeAssetType = derivativeAssetType; } public void setOffsetComb(String offsetComb) { this.offsetComb = offsetComb; } public void setCommoditySubtype(String commoditySubtype) { this.commoditySubtype = commoditySubtype; } public void setSupervisionFactor(BigDecimal supervisionFactor) { this.supervisionFactor = supervisionFactor; } public void setSupervisionCoefficient(BigDecimal supervisionCoefficient) { this.supervisionCoefficient = supervisionCoefficient; } public void setNmtD1EffectiveNotional(BigDecimal nmtD1EffectiveNotional) { this.nmtD1EffectiveNotional = nmtD1EffectiveNotional; } public void setNmtD2EffectiveNotional(BigDecimal nmtD2EffectiveNotional) { this.nmtD2EffectiveNotional = nmtD2EffectiveNotional; } public void setNmtD3EffectiveNotional(BigDecimal nmtD3EffectiveNotional) { this.nmtD3EffectiveNotional = nmtD3EffectiveNotional; } public void setMtD1EffectiveNotional(BigDecimal mtD1EffectiveNotional) { this.mtD1EffectiveNotional = mtD1EffectiveNotional; } public void setMtD2EffectiveNotional(BigDecimal mtD2EffectiveNotional) { this.mtD2EffectiveNotional = mtD2EffectiveNotional; } public void setMtD3EffectiveNotional(BigDecimal mtD3EffectiveNotional) { this.mtD3EffectiveNotional = mtD3EffectiveNotional; } public void setNmtEffectiveNotional(BigDecimal nmtEffectiveNotional) { this.nmtEffectiveNotional = nmtEffectiveNotional; } public void setMtEffectiveNotional(BigDecimal mtEffectiveNotional) { this.mtEffectiveNotional = mtEffectiveNotional; } public void setNmtAddOn(BigDecimal nmtAddOn) { this.nmtAddOn = nmtAddOn; } public void setMtAddOn(BigDecimal mtAddOn) { this.mtAddOn = mtAddOn; } public void setNmtAddOnP1(BigDecimal nmtAddOnP1) { this.nmtAddOnP1 = nmtAddOnP1; } public void setNmtAddOnP2(BigDecimal nmtAddOnP2) { this.nmtAddOnP2 = nmtAddOnP2; } public void setMtAddOnP1(BigDecimal mtAddOnP1) { this.mtAddOnP1 = mtAddOnP1; } public void setMtAddOnP2(BigDecimal mtAddOnP2) { this.mtAddOnP2 = mtAddOnP2; } public boolean equals(Object o) { if (o == this) return true;  if (!(o instanceof com.amarsoft.rwa.engine.entity.DiIntermediateDto)) return false;  com.amarsoft.rwa.engine.entity.DiIntermediateDto other = (com.amarsoft.rwa.engine.entity.DiIntermediateDto)o; if (!other.canEqual(this)) return false;  Object this$intResultNo = getIntResultNo(), other$intResultNo = other.getIntResultNo(); if ((this$intResultNo == null) ? (other$intResultNo != null) : !this$intResultNo.equals(other$intResultNo)) return false;  Object this$intResultType = getIntResultType(), other$intResultType = other.getIntResultType(); if ((this$intResultType == null) ? (other$intResultType != null) : !this$intResultType.equals(other$intResultType)) return false;  Object this$nettingId = getNettingId(), other$nettingId = other.getNettingId(); if ((this$nettingId == null) ? (other$nettingId != null) : !this$nettingId.equals(other$nettingId)) return false;  Object this$clientId = getClientId(), other$clientId = other.getClientId(); if ((this$clientId == null) ? (other$clientId != null) : !this$clientId.equals(other$clientId)) return false;  Object this$marginTradingFlag = getMarginTradingFlag(), other$marginTradingFlag = other.getMarginTradingFlag(); if ((this$marginTradingFlag == null) ? (other$marginTradingFlag != null) : !this$marginTradingFlag.equals(other$marginTradingFlag)) return false;  Object this$derivativeAssetType = getDerivativeAssetType(), other$derivativeAssetType = other.getDerivativeAssetType(); if ((this$derivativeAssetType == null) ? (other$derivativeAssetType != null) : !this$derivativeAssetType.equals(other$derivativeAssetType)) return false;  Object this$offsetComb = getOffsetComb(), other$offsetComb = other.getOffsetComb(); if ((this$offsetComb == null) ? (other$offsetComb != null) : !this$offsetComb.equals(other$offsetComb)) return false;  Object this$commoditySubtype = getCommoditySubtype(), other$commoditySubtype = other.getCommoditySubtype(); if ((this$commoditySubtype == null) ? (other$commoditySubtype != null) : !this$commoditySubtype.equals(other$commoditySubtype)) return false;  Object this$supervisionFactor = getSupervisionFactor(), other$supervisionFactor = other.getSupervisionFactor(); if ((this$supervisionFactor == null) ? (other$supervisionFactor != null) : !this$supervisionFactor.equals(other$supervisionFactor)) return false;  Object this$supervisionCoefficient = getSupervisionCoefficient(), other$supervisionCoefficient = other.getSupervisionCoefficient(); if ((this$supervisionCoefficient == null) ? (other$supervisionCoefficient != null) : !this$supervisionCoefficient.equals(other$supervisionCoefficient)) return false;  Object this$nmtD1EffectiveNotional = getNmtD1EffectiveNotional(), other$nmtD1EffectiveNotional = other.getNmtD1EffectiveNotional(); if ((this$nmtD1EffectiveNotional == null) ? (other$nmtD1EffectiveNotional != null) : !this$nmtD1EffectiveNotional.equals(other$nmtD1EffectiveNotional)) return false;  Object this$nmtD2EffectiveNotional = getNmtD2EffectiveNotional(), other$nmtD2EffectiveNotional = other.getNmtD2EffectiveNotional(); if ((this$nmtD2EffectiveNotional == null) ? (other$nmtD2EffectiveNotional != null) : !this$nmtD2EffectiveNotional.equals(other$nmtD2EffectiveNotional)) return false;  Object this$nmtD3EffectiveNotional = getNmtD3EffectiveNotional(), other$nmtD3EffectiveNotional = other.getNmtD3EffectiveNotional(); if ((this$nmtD3EffectiveNotional == null) ? (other$nmtD3EffectiveNotional != null) : !this$nmtD3EffectiveNotional.equals(other$nmtD3EffectiveNotional)) return false;  Object this$mtD1EffectiveNotional = getMtD1EffectiveNotional(), other$mtD1EffectiveNotional = other.getMtD1EffectiveNotional(); if ((this$mtD1EffectiveNotional == null) ? (other$mtD1EffectiveNotional != null) : !this$mtD1EffectiveNotional.equals(other$mtD1EffectiveNotional)) return false;  Object this$mtD2EffectiveNotional = getMtD2EffectiveNotional(), other$mtD2EffectiveNotional = other.getMtD2EffectiveNotional(); if ((this$mtD2EffectiveNotional == null) ? (other$mtD2EffectiveNotional != null) : !this$mtD2EffectiveNotional.equals(other$mtD2EffectiveNotional)) return false;  Object this$mtD3EffectiveNotional = getMtD3EffectiveNotional(), other$mtD3EffectiveNotional = other.getMtD3EffectiveNotional(); if ((this$mtD3EffectiveNotional == null) ? (other$mtD3EffectiveNotional != null) : !this$mtD3EffectiveNotional.equals(other$mtD3EffectiveNotional)) return false;  Object this$nmtEffectiveNotional = getNmtEffectiveNotional(), other$nmtEffectiveNotional = other.getNmtEffectiveNotional(); if ((this$nmtEffectiveNotional == null) ? (other$nmtEffectiveNotional != null) : !this$nmtEffectiveNotional.equals(other$nmtEffectiveNotional)) return false;  Object this$mtEffectiveNotional = getMtEffectiveNotional(), other$mtEffectiveNotional = other.getMtEffectiveNotional(); if ((this$mtEffectiveNotional == null) ? (other$mtEffectiveNotional != null) : !this$mtEffectiveNotional.equals(other$mtEffectiveNotional)) return false;  Object this$nmtAddOn = getNmtAddOn(), other$nmtAddOn = other.getNmtAddOn(); if ((this$nmtAddOn == null) ? (other$nmtAddOn != null) : !this$nmtAddOn.equals(other$nmtAddOn)) return false;  Object this$mtAddOn = getMtAddOn(), other$mtAddOn = other.getMtAddOn(); if ((this$mtAddOn == null) ? (other$mtAddOn != null) : !this$mtAddOn.equals(other$mtAddOn)) return false;  Object this$nmtAddOnP1 = getNmtAddOnP1(), other$nmtAddOnP1 = other.getNmtAddOnP1(); if ((this$nmtAddOnP1 == null) ? (other$nmtAddOnP1 != null) : !this$nmtAddOnP1.equals(other$nmtAddOnP1)) return false;  Object this$nmtAddOnP2 = getNmtAddOnP2(), other$nmtAddOnP2 = other.getNmtAddOnP2(); if ((this$nmtAddOnP2 == null) ? (other$nmtAddOnP2 != null) : !this$nmtAddOnP2.equals(other$nmtAddOnP2)) return false;  Object this$mtAddOnP1 = getMtAddOnP1(), other$mtAddOnP1 = other.getMtAddOnP1(); if ((this$mtAddOnP1 == null) ? (other$mtAddOnP1 != null) : !this$mtAddOnP1.equals(other$mtAddOnP1)) return false;  Object this$mtAddOnP2 = getMtAddOnP2(), other$mtAddOnP2 = other.getMtAddOnP2(); return !((this$mtAddOnP2 == null) ? (other$mtAddOnP2 != null) : !this$mtAddOnP2.equals(other$mtAddOnP2)); } protected boolean canEqual(Object other) { return other instanceof com.amarsoft.rwa.engine.entity.DiIntermediateDto; } public int hashCode() { int PRIME = 59; result = 1; Object $intResultNo = getIntResultNo(); result = result * 59 + (($intResultNo == null) ? 43 : $intResultNo.hashCode()); Object $intResultType = getIntResultType(); result = result * 59 + (($intResultType == null) ? 43 : $intResultType.hashCode()); Object $nettingId = getNettingId(); result = result * 59 + (($nettingId == null) ? 43 : $nettingId.hashCode()); Object $clientId = getClientId(); result = result * 59 + (($clientId == null) ? 43 : $clientId.hashCode()); Object $marginTradingFlag = getMarginTradingFlag(); result = result * 59 + (($marginTradingFlag == null) ? 43 : $marginTradingFlag.hashCode()); Object $derivativeAssetType = getDerivativeAssetType(); result = result * 59 + (($derivativeAssetType == null) ? 43 : $derivativeAssetType.hashCode()); Object $offsetComb = getOffsetComb(); result = result * 59 + (($offsetComb == null) ? 43 : $offsetComb.hashCode()); Object $commoditySubtype = getCommoditySubtype(); result = result * 59 + (($commoditySubtype == null) ? 43 : $commoditySubtype.hashCode()); Object $supervisionFactor = getSupervisionFactor(); result = result * 59 + (($supervisionFactor == null) ? 43 : $supervisionFactor.hashCode()); Object $supervisionCoefficient = getSupervisionCoefficient(); result = result * 59 + (($supervisionCoefficient == null) ? 43 : $supervisionCoefficient.hashCode()); Object $nmtD1EffectiveNotional = getNmtD1EffectiveNotional(); result = result * 59 + (($nmtD1EffectiveNotional == null) ? 43 : $nmtD1EffectiveNotional.hashCode()); Object $nmtD2EffectiveNotional = getNmtD2EffectiveNotional(); result = result * 59 + (($nmtD2EffectiveNotional == null) ? 43 : $nmtD2EffectiveNotional.hashCode()); Object $nmtD3EffectiveNotional = getNmtD3EffectiveNotional(); result = result * 59 + (($nmtD3EffectiveNotional == null) ? 43 : $nmtD3EffectiveNotional.hashCode()); Object $mtD1EffectiveNotional = getMtD1EffectiveNotional(); result = result * 59 + (($mtD1EffectiveNotional == null) ? 43 : $mtD1EffectiveNotional.hashCode()); Object $mtD2EffectiveNotional = getMtD2EffectiveNotional(); result = result * 59 + (($mtD2EffectiveNotional == null) ? 43 : $mtD2EffectiveNotional.hashCode()); Object $mtD3EffectiveNotional = getMtD3EffectiveNotional(); result = result * 59 + (($mtD3EffectiveNotional == null) ? 43 : $mtD3EffectiveNotional.hashCode()); Object $nmtEffectiveNotional = getNmtEffectiveNotional(); result = result * 59 + (($nmtEffectiveNotional == null) ? 43 : $nmtEffectiveNotional.hashCode()); Object $mtEffectiveNotional = getMtEffectiveNotional(); result = result * 59 + (($mtEffectiveNotional == null) ? 43 : $mtEffectiveNotional.hashCode()); Object $nmtAddOn = getNmtAddOn(); result = result * 59 + (($nmtAddOn == null) ? 43 : $nmtAddOn.hashCode()); Object $mtAddOn = getMtAddOn(); result = result * 59 + (($mtAddOn == null) ? 43 : $mtAddOn.hashCode()); Object $nmtAddOnP1 = getNmtAddOnP1(); result = result * 59 + (($nmtAddOnP1 == null) ? 43 : $nmtAddOnP1.hashCode()); Object $nmtAddOnP2 = getNmtAddOnP2(); result = result * 59 + (($nmtAddOnP2 == null) ? 43 : $nmtAddOnP2.hashCode()); Object $mtAddOnP1 = getMtAddOnP1(); result = result * 59 + (($mtAddOnP1 == null) ? 43 : $mtAddOnP1.hashCode()); Object $mtAddOnP2 = getMtAddOnP2(); return result * 59 + (($mtAddOnP2 == null) ? 43 : $mtAddOnP2.hashCode()); } public String toString() { return "DiIntermediateDto(intResultNo=" + getIntResultNo() + ", intResultType=" + getIntResultType() + ", nettingId=" + getNettingId() + ", clientId=" + getClientId() + ", marginTradingFlag=" + getMarginTradingFlag() + ", derivativeAssetType=" + getDerivativeAssetType() + ", offsetComb=" + getOffsetComb() + ", commoditySubtype=" + getCommoditySubtype() + ", supervisionFactor=" + getSupervisionFactor() + ", supervisionCoefficient=" + getSupervisionCoefficient() + ", nmtD1EffectiveNotional=" + getNmtD1EffectiveNotional() + ", nmtD2EffectiveNotional=" + getNmtD2EffectiveNotional() + ", nmtD3EffectiveNotional=" + getNmtD3EffectiveNotional() + ", mtD1EffectiveNotional=" + getMtD1EffectiveNotional() + ", mtD2EffectiveNotional=" + getMtD2EffectiveNotional() + ", mtD3EffectiveNotional=" + getMtD3EffectiveNotional() + ", nmtEffectiveNotional=" + getNmtEffectiveNotional() + ", mtEffectiveNotional=" + getMtEffectiveNotional() + ", nmtAddOn=" + getNmtAddOn() + ", mtAddOn=" + getMtAddOn() + ", nmtAddOnP1=" + getNmtAddOnP1() + ", nmtAddOnP2=" + getNmtAddOnP2() + ", mtAddOnP1=" + getMtAddOnP1() + ", mtAddOnP2=" + getMtAddOnP2() + ")"; }
/*    */ 
/*    */   
/* 15 */   public String getIntResultNo() { return this.intResultNo; }
/* 16 */   public String getIntResultType() { return this.intResultType; }
/* 17 */   public String getNettingId() { return this.nettingId; }
/* 18 */   public String getClientId() { return this.clientId; }
/* 19 */   public String getMarginTradingFlag() { return this.marginTradingFlag; }
/* 20 */   public String getDerivativeAssetType() { return this.derivativeAssetType; }
/* 21 */   public String getOffsetComb() { return this.offsetComb; }
/* 22 */   public String getCommoditySubtype() { return this.commoditySubtype; }
/* 23 */   public BigDecimal getSupervisionFactor() { return this.supervisionFactor; }
/* 24 */   public BigDecimal getSupervisionCoefficient() { return this.supervisionCoefficient; }
/* 25 */   public BigDecimal getNmtD1EffectiveNotional() { return this.nmtD1EffectiveNotional; }
/* 26 */   public BigDecimal getNmtD2EffectiveNotional() { return this.nmtD2EffectiveNotional; }
/* 27 */   public BigDecimal getNmtD3EffectiveNotional() { return this.nmtD3EffectiveNotional; }
/* 28 */   public BigDecimal getMtD1EffectiveNotional() { return this.mtD1EffectiveNotional; }
/* 29 */   public BigDecimal getMtD2EffectiveNotional() { return this.mtD2EffectiveNotional; }
/* 30 */   public BigDecimal getMtD3EffectiveNotional() { return this.mtD3EffectiveNotional; }
/* 31 */   public BigDecimal getNmtEffectiveNotional() { return this.nmtEffectiveNotional; }
/* 32 */   public BigDecimal getMtEffectiveNotional() { return this.mtEffectiveNotional; }
/* 33 */   public BigDecimal getNmtAddOn() { return this.nmtAddOn; } public BigDecimal getMtAddOn() {
/* 34 */     return this.mtAddOn;
/*    */   }
/* 36 */   public BigDecimal getNmtAddOnP1() { return this.nmtAddOnP1; }
/* 37 */   public BigDecimal getNmtAddOnP2() { return this.nmtAddOnP2; }
/* 38 */   public BigDecimal getMtAddOnP1() { return this.mtAddOnP1; } public BigDecimal getMtAddOnP2() {
/* 39 */     return this.mtAddOnP2;
/*    */   } }


/* Location:              C:\Users\16509\Desktop\工作文档\稠州银行\代码文件\rwa-engine-1.0-SNAPSHOT\rwa-engine-1.0-SNAPSHOT.jar!\BOOT-INF\classes\com\amarsoft\rwa\engine\entity\DiIntermediateDto.class
 * Java compiler version: 8 (52.0)
 * JD-Core Version:       1.1.3
 */